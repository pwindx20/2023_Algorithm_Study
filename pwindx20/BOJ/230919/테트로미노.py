# 14500
# 입력: N, M/ 종이에 쓰여져 있는 수
# 출력: 테트로미노가 놓은 칸에 쓰인 수들의 합의 최댓값
def solve(i, j):
    global max_v
    for t in range(1,6):
        for tet in tetra[t]:
            temp = 0
            for d in range(4):
                ni, nj = i+tet[d][0],j+tet[d][1]
                
                if ni<0 or ni>=N or nj<0 or nj>=M:
                    break
                elif 0<=ni<N and 0<=nj<M:
                    temp += base[ni][nj]
            if temp >max_v:
                max_v = temp
    
N, M = map(int,input().split())
base = [list(map(int,input().split())) for _ in range(N)]
max_v = 0

tetra = {1:[[(0,0),(0,1),(0,2),(0,3)],[(0,0),(1,0),(2,0),(3,0)]],
         2:[[(0,0),(0,1),(1,0),(1,1)]],
         3:[[(0,0),(1,0),(2,0),(2,1)],[(0,0),(1,0),(0,1),(0,2)],[(0,0),(0,1),(1,1),(2,1)],[(0,0),(0,1),(0,2),(-1,2)],[(0,0),(1,0),(2,0),(2,-1)],[(0,0),(0,1),(0,2),(1,2)],[(0,0),(1,0),(2,0),(0,1)],[(0,0),(1,0),(1,1),(1,2)]],
         4:[[(0,0),(1,0),(1,1),(2,1)],[(0,0),(0,1),(-1,1),(-1,2)],[(0,0),(1,0),(0,1),(-1,1)],[(0,0),(0,1),(1,1),(1,2)]],
         5:[[(0,0),(0,1),(0,2),(1,1)],[(0,0),(0,1),(0,2),(-1,1)],[(0,0),(1,0),(2,0),(1,1)],[(0,0),(1,0),(2,0),(1,-1)]]}

for i in range(N):
    for j in range(M):
        solve(i, j)
print(max_v)